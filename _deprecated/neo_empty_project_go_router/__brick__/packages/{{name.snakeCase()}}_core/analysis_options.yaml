include: package:very_good_analysis/analysis_options.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gr.dart"
    - "**/injectable_init.config.dart"
    - "mason/**"
    - "bricks/**"
    - "lib/l10n/generated/intl/*.dart"
    - "lib/l10n/generated/*.dart"
  errors:
    invalid_annotation_target: ignore

linter:
  rules:
    avoid_positional_boolean_parameters: false

    # ------ Disable individual rules ----- #
    #                 ---                   #
    # Turn off what you don't like.         #
    # ------------------------------------- #

    # Use parameter order as in json response
    always_put_required_named_parameters_first: true

    depend_on_referenced_packages: false

    omit_local_variable_types: false

    # Util classes are awesome!
    avoid_classes_with_only_static_members: false

    # ------ Enable individual rules ------ #
    #                 ---                   #
    # These rules here are good but too     #
    # opinionated to enable them by default #
    # ------------------------------------- #

    # Make constructors the first thing in every class
    sort_constructors_first: true

    # The new tabs vs. spaces. Choose wisely
    prefer_single_quotes: true

    # Good packages document everything
    public_member_api_docs: false

    # Blindly follow the Flutter code style, which prefers types everywhere
    always_specify_types: false

    use_build_context_synchronously: false

    no_leading_underscores_for_local_identifiers: false

    # Back to the 80s
    lines_longer_than_80_chars: true

    directives_ordering: true

    # Don't explicitly set defaults
    # Dart SDK: >= 2.8.0-dev.1.0 • (Linter v0.1.107)
    # https://dart-lang.github.io/linter/lints/avoid_redundant_argument_values.html
    avoid_redundant_argument_values: true

    # Remove async/await clutter when not required
    # https://dart-lang.github.io/linter/lints/unnecessary_await_in_return.html
    unnecessary_await_in_return: true

    # Remove unnecessary braces
    # pedantic: enabled
    # https://dart-lang.github.io/linter/lints/unnecessary_brace_in_string_interps.html
    unnecessary_brace_in_string_interps: true

    # Yes, const everywhere. But not in an already const scope
    # pedantic: enabled
    # https://dart-lang.github.io/linter/lints/unnecessary_const.html
    unnecessary_const: true

    # Disabled because `final` prevents accidental reassignment
    # https://dart-lang.github.io/linter/lints/unnecessary_final.html
    # unnecessary_final

    # Getter/setters can be added later on in a non API breaking manner
    #
    # https://dart-lang.github.io/linter/lints/unnecessary_getters_setters.html
    unnecessary_getters_setters: true

    # Flutter setState is a good example where a lambda should always be used.
    # https://github.com/dart-lang/linter/issues/498
    #
    # Some generic code sometimes requires lambdas, otherwise the generic type isn't forwarded correctly.
    #
    # https://dart-lang.github.io/linter/lints/unnecessary_lambdas.html
    # unnecessary_lambdas

    # Remove the optional `new` keyword
    # pedantic: enabled
    # https://dart-lang.github.io/linter/lints/unnecessary_new.html
    unnecessary_new: true

    # Don't assign `null` when value is already `null`.
    # pedantic: disabled
    # https://dart-lang.github.io/linter/lints/unnecessary_null_aware_assignments.html
    unnecessary_null_aware_assignments: true

    # Remove ! when already non-nullable
    # Dart SDK: >= 2.10.0-144.0.dev • (Linter v0.1.119)
    # https://dart-lang.github.io/linter/lints/unnecessary_null_checks.html
    unnecessary_null_checks: true

    # Don't assign `null` when value is already `null`.
    # pedantic: enabled
    # https://dart-lang.github.io/linter/lints/unnecessary_null_in_if_null_operators.html
    unnecessary_null_in_if_null_operators: true

    # If a variable doesn't change and is initialized, no need to define it as nullable (NNDB)
    # Dart SDK: >= 2.10.0-10.0.dev • (Linter v0.1.118)
    # https://dart-lang.github.io/linter/lints/unnecessary_nullable_for_final_variable_declarations.html
    unnecessary_nullable_for_final_variable_declarations: true

    # Remove overrides which simply call super
    # https://dart-lang.github.io/linter/lints/unnecessary_overrides.html
    unnecessary_overrides: true

    # Remove clutter where possible
    # https://dart-lang.github.io/linter/lints/unnecessary_parenthesis.html
    unnecessary_parenthesis: true

    # Use raw string only when needed
    # Dart SDK: >= 2.8.0-dev.11.0 • (Linter v0.1.111)
    # https://dart-lang.github.io/linter/lints/unnecessary_raw_strings.html
    unnecessary_raw_strings: true

    # Avoid magic overloads of + operators
    # https://dart-lang.github.io/linter/lints/unnecessary_statements.html
    unnecessary_statements: true

    # Remove unnecessary escape characters
    # Dart SDK: >= 2.8.0-dev.11.0 • (Linter v0.1.111)
    # https://dart-lang.github.io/linter/lints/unnecessary_string_escapes.html
    unnecessary_string_escapes: true

    # Completely unnecessary code, simplify to save a few CPU cycles
    #
    # Dart SDK: >= 2.8.0-dev.10.0 • (Linter v0.1.110)
    #
    # https://dart-lang.github.io/linter/lints/unnecessary_string_interpolations.html
    unnecessary_string_interpolations: true

    # The variable is clear, remove clutter
    # pedantic: enabled
    # https://dart-lang.github.io/linter/lints/unnecessary_this.html
    unnecessary_this: true
